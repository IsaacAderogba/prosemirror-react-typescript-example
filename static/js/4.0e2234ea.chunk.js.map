{"version":3,"sources":["../node_modules/prosemirror-dev-tools/dist/esm/state/json-diff-worker.js"],"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","JsonDiffWorker","worker","obj","value","_this","this","instance","Constructor","TypeError","_classCallCheck","Map","addEventListener","e","deferred","queue","get","data","id","resolve","returns","protoProps","staticProps","input","nanoid","r","p","Promise","apply","arguments","createDeferrable","set","postMessage","method","args","prototype"],"mappings":"8KAAA,kEAEA,SAASA,EAAkBC,EAAQC,GAAS,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,IAAIE,EAAaH,EAAMC,GAAIE,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAOtS,IAAIO,EAA8B,WACvC,SAASA,EAAeC,GACtB,IALqBC,EAAKH,EAAKI,EAK3BC,EAAQC,MAXhB,SAAyBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCAa5GC,CAAgBJ,KAAML,GAPDE,EASLG,KATUN,EASJ,QATSI,EASA,IAAIO,IATSX,KAAOG,EAAOL,OAAOC,eAAeI,EAAKH,EAAK,CAAEI,MAAOA,EAAOT,YAAY,EAAMC,cAAc,EAAMC,UAAU,IAAkBM,EAAIH,GAAOI,EAWvLE,KAAKJ,OAASA,EACdI,KAAKJ,OAAOU,iBAAiB,WAAW,SAAUC,GAChD,IAAIC,EAAWT,EAAMU,MAAMC,IAAIH,EAAEI,KAAKC,IAElCJ,IACFT,EAAMU,MAAN,OAAsBF,EAAEI,KAAKC,IAE7BJ,EAASK,QAAQN,EAAEI,KAAKG,aApBhC,IAAsBZ,EAAaa,EAAYC,EAwC7C,OAxCoBd,EAyBPP,GAzBoBoB,EAyBJ,CAAC,CAC5BrB,IAAK,OACLI,MAAO,SAAcmB,GACnB,IAAIL,EAAKM,cACLV,EAcV,WACE,IAAIW,EACAC,EAAI,IAAIC,SAAQ,SAAUR,GAC5BM,EAAIN,KAON,OAJAO,EAAEP,QAAU,WACV,OAAOM,EAAEG,WAAM,EAAQC,YAGlBH,EAxBYI,GAOf,OANAxB,KAAKS,MAAMgB,IAAIb,EAAIJ,GACnBR,KAAKJ,OAAO8B,YAAY,CACtBC,OAAQ,OACRf,GAAIA,EACJgB,KAAM,CAACX,KAEFT,OApCiEzB,EAAkBmB,EAAY2B,UAAWd,GAAiBC,GAAajC,EAAkBmB,EAAac,GAwC3KrB,EAnCgC","file":"static/js/4.0e2234ea.chunk.js","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { nanoid } from \"nanoid\";\nexport var JsonDiffWorker = /*#__PURE__*/function () {\n  function JsonDiffWorker(worker) {\n    var _this = this;\n\n    _classCallCheck(this, JsonDiffWorker);\n\n    _defineProperty(this, \"queue\", new Map());\n\n    this.worker = worker;\n    this.worker.addEventListener(\"message\", function (e) {\n      var deferred = _this.queue.get(e.data.id);\n\n      if (deferred) {\n        _this.queue[\"delete\"](e.data.id);\n\n        deferred.resolve(e.data.returns);\n      }\n    });\n  }\n\n  _createClass(JsonDiffWorker, [{\n    key: \"diff\",\n    value: function diff(input) {\n      var id = nanoid();\n      var deferred = createDeferrable();\n      this.queue.set(id, deferred);\n      this.worker.postMessage({\n        method: \"diff\",\n        id: id,\n        args: [input]\n      });\n      return deferred;\n    }\n  }]);\n\n  return JsonDiffWorker;\n}();\n\nfunction createDeferrable() {\n  var r;\n  var p = new Promise(function (resolve) {\n    r = resolve;\n  });\n\n  p.resolve = function () {\n    return r.apply(void 0, arguments);\n  };\n\n  return p;\n}"],"sourceRoot":""}